# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attendance {
  created_at: String!
  dateAttendance: String!
  id: Int!
  idTeacher: Float!
  status: String!
  student: StudentAttendance!
  updated_at: String!
}

type Authentication {
  accessToken: String!
  userId: String!
}

input CreateAttendanceInput {
  dateAttendance: String!
  idTeacher: Float!
}

input CreateStudentInput {
  birthdate: String!
  document: String!
  firstName: String!
  lastName: String!
  lastNameTwo: String!
  photoUrl: Upload!
  secondName: String!
}

input CreateTeacherInput {
  birthdate: String!
  confirmationPassword: String!
  document: String!
  firstName: String!
  lastName: String!
  lastNameTwo: String!
  password: String!
  secondName: String!
  username: String!
}

input CreateUploadFileInput {
  file: Upload!
}

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  checkAttendance(attendance: CreateAttendanceInput!, id: Float!): Attendance!
  createStudent(createStudentInput: CreateStudentInput!): Student!
  createTeacher(createTeacherInput: CreateTeacherInput!): Teacher!
  createUploadFile(createUploadFileInput: CreateUploadFileInput!): UploadFile!
  login(createLoginInput: LoginInput!): Authentication!
  register(createRegisterInput: RegisterInput!): Authentication!
  removeStudent(id: Int!): Student!
  removeTeacher(id: Int!): Teacher!
  updateStudent(updateStudentInput: UpdateStudentInput!): Student!
  updateTeacher(updateTeacherInput: UpdateTeacherInput!): Teacher!
}

type Query {
  attendances: [Attendance!]!
  getAttendanceByDate(date: String!): [Attendance!]!
  getAttendanceByDateAndStudent(date: String!, idStudent: Float!): Attendance!
  student(id: Int!): Student!
  students: [Student!]!
  teacher(id: Int!): Teacher!
  teachers: [Teacher!]!
}

input RegisterInput {
  confirmationPassword: String!
  password: String!
  username: String!
}

type Student {
  birthdate: String!
  document: String!
  firstName: String!
  id: Int!
  lastName: String!
  lastNameTwo: String!
  photoUrl: String!
  secondName: String!
  status: String!
}

type StudentAttendance {
  birthdate: String!
  document: String!
  firstName: String!
  id: Float!
  lastName: String!
  lastNameTwo: String!
  photoUrl: String!
  secondName: String!
}

type Teacher {
  accessToken: String!
  birthdate: String!
  document: String!
  firstName: String!
  id: Float!
  idUser: String!
  lastName: String!
  lastNameTwo: String!
  secondName: String!
}

input UpdateStudentInput {
  birthdate: String
  document: String
  firstName: String
  id: Int!
  lastName: String
  lastNameTwo: String
  photoUrl: Upload
  secondName: String
}

input UpdateTeacherInput {
  birthdate: String
  confirmationPassword: String
  document: String
  firstName: String
  id: Int!
  lastName: String
  lastNameTwo: String
  password: String
  secondName: String
  username: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadFile {
  file: String!
}